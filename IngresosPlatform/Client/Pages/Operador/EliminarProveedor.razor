@page "/Proveedores/Baja/{ProveedorId:int}"
@inject IServiceProveedor serviceProveedor;
@inject IServiceUsuario serviceUsuario;
@inject NavigationManager nav
@inject ILocalStorageService localStorage

<Loading />

@code {
    [Parameter]
    public int ProveedorId { get; set; }
    private UsuarioDTO usuario;
    private string token;

    protected override void OnInitialized()
    {
        BajaProveedor();
    }

    protected override void OnParametersSet()
    {
        BajaProveedor();
    }


    public async void BajaProveedor()
    {
        usuario = await localStorage.GetItemAsync<UsuarioDTO>(SD.LocalUsuario);
        token = await localStorage.GetItemAsync<string>(SD.LocalToken);
        if (usuario == null)
        {
            nav.NavigateTo("/", true);
        }
        else
        {
            int usuarioId = await serviceProveedor.EliminarProveedor(ProveedorId,token);

            if (usuarioId > 0)
            {
                int usuarioEliminado = await serviceUsuario.EliminarUsuario(usuarioId, usuario.Token);

                if (usuarioEliminado != 0)
                {
                    nav.NavigateTo("/Proveedores", true);
                }
                else
                {
                    Console.WriteLine("error");
                }
            }
        }
    }

}
