@page "/Funcionarios/Nuevo"
@using System.IO
@using Tewr.Blazor.FileReader;
@using Newtonsoft.Json;
@inject NavigationManager nav
@inject IServiceFuncionario serviceFuncionario
@inject ILocalStorageService localStorage
@inject IFileReaderService fileReader
@inject IJSRuntime js
@inject HttpClient httpClient

<div class="container">
    <h3>Nuevo Proveedor</h3>

    <p style="font-size:small;color:orange">Recuerde que el tamaño de los archivos deben ser hasta 2Mb</p>

    <section class="row">
        <div class="col-6">
            <EditForm Model="funcionarioDTO" OnValidSubmit="AgregarNuevoFuncionario">
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label for="rut">Nombre de funcionario*</label>
                            <InputText @bind-Value="funcionarioDTO.Nombre" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.Nombre)" />
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Numero de Cedula*</label>
                            <InputText @bind-Value="funcionarioDTO.Cedula" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.Cedula)" />
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Vto. de Cedula*</label>
                            <InputDate @bind-Value="funcionarioDTO.VtoCedula" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.VtoCedula)" />
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <input type="file" accept=".pdf" @ref="refCedula" @onchange="SubirPDF_PathCedula"/>
                            <ValidationMessage For="@( () => funcionarioDTO.PathCedula)" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Categoria de libreta conducir</label>
                            <InputText @bind-Value="funcionarioDTO.CategoriaLibreta" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.CategoriaLibreta)" />
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Vto. de libreta de conducir</label>
                            <InputDate @bind-Value="funcionarioDTO.VtoLibreta" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.VtoLibreta)" />
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <input type="file" accept=".pdf" @ref="refLibreta" @onchange="SubirPDF_PathLibreta"/>
                            <ValidationMessage For="@( () => funcionarioDTO.PathLibreta)" />
                        </div>
                    </div>
                </div>




                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Vto. de carne de salud</label>
                            <InputDate @bind-Value="funcionarioDTO.VtoCarneSalud" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.VtoCarneSalud)" />
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <input type="file" accept=".pdf" @ref="refCarneSalud" @onchange="SubirPDF_PathCarneSalud"/>
                            <ValidationMessage For="@( () => funcionarioDTO.PathCarneSalud)" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Vto. de C. Manipulación de alimentos</label>
                            <InputDate @bind-Value="funcionarioDTO.VtoCMAlimentos" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.VtoCMAlimentos)" />
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <input type="file" accept=".pdf" @ref="refCarneMA" @onchange="SubirPDF_PathMA"/>
                            <ValidationMessage For="@( () => funcionarioDTO.PathCMAlimentos)" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            <label for="rut">Fecha de alta BPS</label>
                            <InputDate @bind-Value="funcionarioDTO.AltaBps" id="rut" class="form-control" />
                            <ValidationMessage For="@( () => funcionarioDTO.AltaBps)" />
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <input type="file" accept=".pdf" @ref="refAltaBPS" @onchange="SubirPDF_PathAltaBPS"/>
                        </div>
                    </div>
                </div>

                @if (!carga)
                {
                    <div class="col text-center">
                        <button type="submit" class="btn btn-primary">Agregar</button>
                        <button type="button" class="btn btn-primary" @onclick="Cancelar">Cancelar</button>
                    </div>
                }

            </EditForm>
        </div>
    </section>

    <section class="row">
        @if (carga)
        {
            <Loading></Loading>
        }
    </section>

</div>

@code {
    FuncionarioDTO funcionarioDTO = new FuncionarioDTO();
    private bool carga = false;

    ElementReference refCedula;
    ElementReference refLibreta;
    ElementReference refCarneSalud;
    ElementReference refCarneMA;
    ElementReference refAltaBPS;

    private async Task AgregarNuevoFuncionario()
    {
        carga = true;
        UsuarioDTO usuarioDTO = await localStorage.GetItemAsync<UsuarioDTO>(SD.LocalUsuario);
        funcionarioDTO.Proveedor = new ProveedorDTO()
        {
            Id = usuarioDTO.Proveedor.Id
        };
        FuncionarioDTO resultado = await serviceFuncionario.Agregar(funcionarioDTO);

        if (resultado != null)
        {
            nav.NavigateTo("/Funcionarios", true);
        }
        else
        {
            await js.MsgError("No se pudo dar de alta al nuevo funcionario");
        }
    }

    private async void SubirPDF_PathCedula()
    {
        var file = (await fileReader.CreateReference(refCedula).EnumerateFilesAsync()).FirstOrDefault();
        if (file == null) return;

        var fileInfo = await file.ReadFileInfoAsync();

        Stream fileStream = null;

        using (var ms = await file.CreateMemoryStreamAsync((int)fileInfo.Size))
        {
            fileStream = ms;
        }
        var contentUpload = new MultipartFormDataContent();
        contentUpload.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("form-data");
        contentUpload.Add(new StreamContent(fileStream, (int)fileStream.Length), "pdf", fileInfo.Name);

        var response = await httpClient.PostAsync("/api/Archivo", contentUpload);
        string nuevaPath = null;

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            nuevaPath = JsonConvert.DeserializeObject<string>(content);

            funcionarioDTO.PathCedula = nuevaPath;
            await js.MsgExitoso("Archivo subido exitosamente");
        }
        else
        {
            await js.MsgError("No se pudo subir el archivo");
        }
    }
    private async void SubirPDF_PathLibreta()
    {

    }
    private async void SubirPDF_PathCarneSalud()
    {

    }
    private async void SubirPDF_PathMA()
    {

    }
    private async void SubirPDF_PathAltaBPS()
    {

    }

    private void Cancelar()
    {
        nav.NavigateTo("/Funcionarios");
    }
}
